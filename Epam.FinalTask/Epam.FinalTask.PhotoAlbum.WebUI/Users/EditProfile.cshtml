@using Epam.FinalTask.PhotoAlbum.Common
@using Epam.FinalTask.PhotoAlbum.Entities

@{
    if (!User.Identity.IsAuthenticated)
    {
        Response.SetStatus(HttpStatusCode.NotFound);
        return;
    }

    Page.Title = "Profile editing";

    string userName = Request["userName"];
    int maxFileSize = 524288;

    if (userName == null)
    {
        userName = User.Identity.Name;
    }

    string errorMessage = null;
    User user = null;

    try
    {
        user = DependencyResolver.UsersLogic.GetUserByUserName(userName);
    }
    catch (Exception)
    {
        Response.SetStatus(HttpStatusCode.BadRequest);
        return;
    }

    if (user == null)
    {
        Response.SetStatus(HttpStatusCode.NotFound);
        return;
    }

    if (IsPost)
    {
        WebImage image = WebImage.GetImageFromRequest();


        if (image != null && user != null)
        {
            if (image.GetBytes(image.ImageFormat).Length <= maxFileSize)
            {
                Avatar newAvatar = new Avatar();

                image.Resize(width: 300, height: 300, preserveAspectRatio: true, preventEnlarge: true);

                byte[] data = image.GetBytes(image.ImageFormat);

                newAvatar.MimeType = MimeMapping.GetMimeMapping(image.FileName);

                newAvatar.AvatarData = Convert.ToBase64String(data);

                DependencyResolver.AvatarsLogic.SetAvatarToUser(newAvatar, user);

                Response.Redirect($"/Users/UserPage?name={userName}");
            }
            else
            {
                errorMessage = "File size must not exceed 0.5 mb.";
            }
        }
    }

    Avatar avatar = null;

    try
    {
        avatar = DependencyResolver.AvatarsLogic.GetUserAvatar(user.UserAvatarId);

        if (avatar == null)
        {
            Response.SetStatus(HttpStatusCode.NotFound);
            return;
        }
    }
    catch (Exception)
    {
        Response.SetStatus(HttpStatusCode.BadRequest);
        return;
    }
}

@section styles {
    <link href="~/Content/Custom/editProfile.css" rel="stylesheet" />
}

    <div class="wrap">
        <div class="userDataBlock">
            <h2 class="userName">@userName</h2>
            <img class="userAvatar" src="data:@avatar.MimeType;base64,@avatar.AvatarData" alt="User avatar" />
        </div>

        <form method="post" class="updateUserForm" enctype="multipart/form-data">
            <div class="formBlock">
                <label for="avatar" class="formLabel">New user avatar</label>
                <input id="avatar" type="file" name="avatar" class="formInput_file" />
            </div>

            <button type="submit" class="btnSubmit">Update profile</button>
        </form>

        @if (IsPost)
        {
            <div class="errorMessage">
                <p>@errorMessage</p>
            </div>
        }
    </div>
