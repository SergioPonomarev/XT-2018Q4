@using Epam.FinalTask.PhotoAlbum.Common
@using Epam.FinalTask.PhotoAlbum.Entities

@{
    if (!User.IsInRole("SuperAdmins"))
    {
        Response.Redirect("~/Index");
        return;
    }

    Page.Title = "Photo Album";

    string avatarOkMessage = null;
    string avatarErrorMessage = null;
    string imageOkMessage = null;
    string imageErrorMessage = null;
    string errorMessage = null;

    Avatar defaultAvatar = null;
    Image bannedImage = null;
    User user = null;

    try
    {
        user = DependencyResolver.UsersLogic.GetUserByUserName(User.Identity.Name);
    }
    catch (Exception)
    {
        Response.SetStatus(HttpStatusCode.BadRequest);
        return;
    }

    if (user == null)
    {
        Response.SetStatus(HttpStatusCode.NotFound);
        return;
    }

    int avatarMaxSize = 524288;
    int imageMaxSize = 1048576;

    if (IsPost)
    {
        WebImage avatarFile = WebImage.GetImageFromRequest("avatar");

        if (avatarFile != null)
        {
            if (avatarFile.GetBytes(avatarFile.ImageFormat).Length <= avatarMaxSize)
            {
                Avatar avatar = new Avatar();

                avatarFile.Resize(width: 300, height: 300, preserveAspectRatio: true, preventEnlarge: true);

                byte[] data = avatarFile.GetBytes(avatarFile.ImageFormat);

                avatar.MimeType = MimeMapping.GetMimeMapping(avatarFile.FileName);

                avatar.AvatarData = Convert.ToBase64String(data);

                if (DependencyResolver.AvatarsLogic.SetDefaultAvatar(avatar))
                {
                    avatarOkMessage = "Avatar has been uploaded successfully.";
                }
                else
                {
                    avatarErrorMessage = "Avatar uploading error.";
                }
            }
            else
            {
                avatarErrorMessage += "Avatar size must not exceed 0.5 mb.";
            }
        }

        WebImage imageFile = WebImage.GetImageFromRequest("image");

        if (imageFile != null)
        {
            if (imageFile.GetBytes(imageFile.ImageFormat).Length <= imageMaxSize)
            {
                Image image = new Image();

                imageFile.Resize(width: 1000, height: 1000, preserveAspectRatio: true, preventEnlarge: true);

                byte[] data = imageFile.GetBytes(imageFile.ImageFormat);

                image.MimeType = MimeMapping.GetMimeMapping(imageFile.FileName);

                image.ImageData = Convert.ToBase64String(data);

                image.ImageOwnerId = user.UserId;

                if (DependencyResolver.ImagesLogic.SetBannedImage(image))
                {
                    imageOkMessage += $"Image has been uploaded succesfully.";
                }
                else
                {
                    imageErrorMessage = "Image uploading error.";
                }
            }
            else
            {
                imageErrorMessage += "Image size must not exceed 1 mb.";
            }
        }
    }

    try
    {
        defaultAvatar = DependencyResolver.AvatarsLogic.GetDefaultAvatar();
        bannedImage = DependencyResolver.ImagesLogic.GetBannedImage();

        if (defaultAvatar == null || bannedImage == null)
        {
            Response.SetStatus(HttpStatusCode.NotFound);
            return;
        }
    }
    catch (Exception)
    {
        Response.SetStatus(HttpStatusCode.BadRequest);
        return;
    }

}

@section styles {
    <link href="~/Content/Custom/management.css" rel="stylesheet" />
}

<div class="wrap">
    @if (errorMessage != null)
    {
        <div class="errorMessage">
            <p>@errorMessage</p>
        </div>
    }
    else
    {
        <div class="imagesBlock">
            <div class="imageBlock">
                <h2 class="imageHeader">Default Users Avatar</h2>
                <img class="imageBlock_img" src="data:@defaultAvatar.MimeType;base64,@defaultAvatar.AvatarData" alt="Default Users Avatar" />
            </div>

            <div class="imageBlock">
                <h2 class="imageHeader">Banned image</h2>
                <img class="imageBlock_img" src="data:@bannedImage.MimeType;base64,@bannedImage.ImageData" alt="Banned image" />
            </div>
        </div>

        <div class="formsBlock">
            <form method="post" class="imageForm" enctype="multipart/form-data">
                <div class="formBlock">
                    <label class="formLabel" for="avatar">Change Default Avatar</label>
                    <input id="avatar" type="file" name="avatar" class="formInput_file" />
                </div>
                <div class="formBlock">
                    <label class="formLabel" for="image">Change Banned Image</label>
                    <input id="image" type="file" name="image" class="formInput_file" />
                </div>
                <button type="submit" class="btnSubmit">Update</button>
            </form>
        </div>

        if (IsPost)
        {
            <div class="okMessage">
                <p>@avatarOkMessage</p>
                <p>@imageOkMessage</p>
            </div>
            <div class="errorMessage">
                <p>@avatarErrorMessage</p>
                <p>@imageErrorMessage</p>
            </div>
        }
    }
</div>